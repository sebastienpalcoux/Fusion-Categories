sage: %attach ListPossibleTypes.sage
sage: L12=LPT[:12]
sage: [len(ll)-1 for ll in L12]		#non-pointed
[0, 0, 0, 0, 1, 2, 2, 6, 10, 41, 143, 811]
sage: sum([len(ll)-1 for ll in L12])
1016
sage: L0=[]
....: for ll in L12:
....:     for l in ll:
....:         if l[-1]>1:	# non-pointed
....:             L0.append(l)
sage: L0.sort()
sage: %attach /home/sebastien/Nutstore Files/SAGE/TypeCriteria.sage
....: %attach /home/sebastien/Nutstore Files/SAGE/TypeToNormaliz.sage
sage: %time L1=TypesCriteria(L0)
CPU times: user 283 ms, sys: 1.01 s, total: 1.3 s
Wall time: 2.85 s
sage: len(L1)
353
sage: %time L2=TypesCriteria(L1,0.1)
CPU times: user 675 ms, sys: 415 ms, total: 1.09 s
Wall time: 4.98 s
sage: len(L2)
352
sage: TypesToPreNormalizAlone(L2)
for i in *; do timeout 1s normaliz -x=4 -c "$i"; done
# There remain 3 unsolved types + 76 ones with a solution		# Total: 79
for i in *; do timeout 10s normaliz -x=4 -c "$i"; done
# There remain 1 unsolved types + 76 ones with a solution		# 77
# in: a single one of rank 12
[1,1,63,135,140,252,540,1260,1260,1890,1890,1890]	# computation time estimated to about 10 days. Excluded by HPC.
# out:
## couting per rank:
[0, 0, 0, 0, 1, 1, 1, 3, 5, 9, 17, 39]
## list:
[[],
[],
[],
[],
[[1,1,1,1,2]
],[
[1,1,1,1,2,2]
],[
[1,1,1,1,2,2,2]
],[
[1,1,1,1,2,2,2,2],
[1,1,1,1,2,2,2,4],
[1,1,2,2,2,2,3,3]
],[
[1,1,1,1,1,1,1,1,2],
[1,1,1,1,2,2,2,2,2],
[1,1,1,1,2,2,2,4,4],
[1,1,1,1,4,4,6,6,6],
[1,1,2,2,2,2,3,3,6]
],[
[1,1,1,1,1,1,1,1,1,3],
[1,1,1,1,1,1,1,1,2,2],
[1,1,1,1,2,2,2,2,2,2],
[1,1,1,1,2,2,2,4,4,4],
[1,1,1,1,4,4,6,6,6,12],
[1,1,1,2,2,2,2,2,2,3],
[1,1,1,2,2,3,4,6,6,6],
[1,1,2,2,2,2,3,3,6,6],
[1,1,2,3,3,4,4,4,6,6]
],[
[1,1,1,1,1,1,1,1,1,3,3],
[1,1,1,1,1,1,1,1,2,2,2],
[1,1,1,1,1,1,1,1,2,2,4],
[1,1,1,1,1,1,2,2,2,3,3],
[1,1,1,1,2,2,2,2,2,2,2],
[1,1,1,1,2,2,2,4,4,4,4],
[1,1,1,1,2,2,2,4,4,4,8],
[1,1,1,1,2,4,4,4,4,6,6],
[1,1,1,1,2,6,6,8,12,12,12],
[1,1,1,1,4,4,6,6,6,12,12],
[1,1,1,1,4,4,12,12,18,18,18],
[1,1,1,2,2,2,2,2,2,3,6],
[1,1,1,2,2,3,4,6,6,6,12],
[1,1,1,3,4,4,4,4,4,4,6],
[1,1,1,3,4,4,6,8,12,12,12],
[1,1,2,2,2,2,3,3,6,6,6],
[1,1,2,3,3,4,4,4,6,6,12]
],[
[1,1,1,1,1,1,1,1,1,3,3,3],
[1,1,1,1,1,1,1,1,2,2,2,2],
[1,1,1,1,1,1,1,1,2,2,4,4],
[1,1,1,1,1,1,2,2,2,3,3,6],
[1,1,1,1,2,2,2,2,2,2,2,2],
[1,1,1,1,2,2,2,2,2,2,2,4],
[1,1,1,1,2,2,2,2,4,6,6,6],
[1,1,1,1,2,2,2,4,4,4,4,4],
[1,1,1,1,2,2,2,4,4,4,8,8],
[1,1,1,1,2,2,2,8,8,12,12,12],
[1,1,1,1,2,4,4,4,4,6,6,12],
[1,1,1,1,2,6,6,8,12,12,12,24],
[1,1,1,1,2,8,18,18,24,36,36,36],
[1,1,1,1,3,3,3,3,4,4,6,6],
[1,1,1,1,4,4,6,6,6,12,12,12],
[1,1,1,1,4,4,12,12,18,18,18,36],
[1,1,1,2,2,2,2,2,2,3,6,6],
[1,1,1,2,2,2,3,4,4,4,6,6],
[1,1,1,2,2,3,4,6,6,6,12,12],
[1,1,1,2,2,3,4,12,12,18,18,18],
[1,1,1,3,4,4,4,4,4,4,6,12],
[1,1,1,3,4,4,6,8,12,12,12,24],
[1,1,1,3,6,8,8,8,8,8,8,12],
[1,1,1,3,6,8,8,12,16,24,24,24],
[1,1,1,3,10,10,12,12,20,30,30,30],
[1,1,2,2,2,2,3,3,3,3,3,3],
[1,1,2,2,2,2,3,3,6,6,6,6],
[1,1,2,2,2,2,3,3,6,6,6,12],
[1,1,2,2,2,2,6,6,6,6,9,9],
[1,1,2,2,2,6,10,10,10,10,15,15],
[1,1,2,2,2,6,15,15,20,30,30,30],
[1,1,2,2,3,3,4,4,4,4,4,6],
[1,1,2,2,3,3,4,6,8,12,12,12],
[1,1,2,3,3,4,4,4,6,6,12,12],
[1,1,2,3,3,6,6,8,8,8,12,12],
[1,1,2,6,6,6,6,10,10,10,15,15],
[1,1,2,7,12,12,14,21,28,42,42,42],
[1,1,2,12,12,21,21,28,28,28,42,42],
[1,2,2,3,4,4,15,15,20,30,30,30]]]

# None perfect, except the last one:
# Consider it first:
 sage: l=[1,2,2,3,4,4,15,15,20,30,30,30]
sage: TypeToNormalizSingle(l)
for i in *; do timeout 10s normaliz -x=4 -c "$i"; done
# All 16 cases excluded: good!!
# So, Theorem 1.6 is already proved at this step.
								# 16+785=801
# Let us do the rest:
sage: TypesToNormalizSingle(L[:-1])
# 785 cases
for i in *; do timeout 10s normaliz -x=4 -c "$i"; done
# 50 unsolved cases + 312 ones with a solution
for i in *; do timeout 100s normaliz -x=4 -c "$i"; done
# 10 unsolved cases + 335 ones with a solution
for i in *; do timeout 1000s normaliz -x=4 -c "$i"; done
# 3 unsolved cases + 337 ones with a solution
## Unlimited try:
for i in *; do normaliz -x=4 -c "$i"; done
## after 12 hours:
# 0 unsolved cases + 340 ones with a solution

## There are 59 (non-pointed) types with a solution (so 59+12 = 71 with pointed types).
## Here is the counting per rank (non-pointed case): [0, 0, 0, 0, 1, 1, 1, 3, 4, 8, 14, 27]
## Comprehensive list:

[[],
 [],
 [],
 [],
 [[1, 1, 1, 1, 2]],
 [[1, 1, 1, 1, 2, 2]],
 [[1, 1, 1, 1, 2, 2, 2]],
 [[1, 1, 1, 1, 2, 2, 2, 2],
  [1, 1, 1, 1, 2, 2, 2, 4],
  [1, 1, 2, 2, 2, 2, 3, 3]],
 [[1, 1, 1, 1, 2, 2, 2, 2, 2],
  [1, 1, 1, 1, 2, 2, 2, 4, 4],
  [1, 1, 1, 1, 4, 4, 6, 6, 6],
  [1, 1, 2, 2, 2, 2, 3, 3, 6]],
 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
  [1, 1, 1, 1, 1, 1, 1, 1, 2, 2],
  [1, 1, 1, 1, 2, 2, 2, 2, 2, 2],
  [1, 1, 1, 1, 2, 2, 2, 4, 4, 4],
  [1, 1, 1, 1, 4, 4, 6, 6, 6, 12],
  [1, 1, 1, 2, 2, 2, 2, 2, 2, 3],
  [1, 1, 2, 2, 2, 2, 3, 3, 6, 6],
  [1, 1, 2, 3, 3, 4, 4, 4, 6, 6]],
 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3],
  [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 4],
  [1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3],
  [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2],
  [1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4],
  [1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 8],
  [1, 1, 1, 1, 2, 4, 4, 4, 4, 6, 6],
  [1, 1, 1, 1, 2, 6, 6, 8, 12, 12, 12],
  [1, 1, 1, 1, 4, 4, 6, 6, 6, 12, 12],
  [1, 1, 1, 1, 4, 4, 12, 12, 18, 18, 18],
  [1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 6],
  [1, 1, 1, 3, 4, 4, 4, 4, 4, 4, 6],
  [1, 1, 2, 2, 2, 2, 3, 3, 6, 6, 6],
  [1, 1, 2, 3, 3, 4, 4, 4, 6, 6, 12]],
 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3],
  [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2],
  [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 4, 4],
  [1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 6],
  [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2],
  [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 4],
  [1, 1, 1, 1, 2, 2, 2, 2, 4, 6, 6, 6],
  [1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4],
  [1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 8, 8],
  [1, 1, 1, 1, 2, 2, 2, 8, 8, 12, 12, 12],
  [1, 1, 1, 1, 2, 4, 4, 4, 4, 6, 6, 12],
  [1, 1, 1, 1, 2, 6, 6, 8, 12, 12, 12, 24],
  [1, 1, 1, 1, 2, 8, 18, 18, 24, 36, 36, 36],
  [1, 1, 1, 1, 3, 3, 3, 3, 4, 4, 6, 6],
  [1, 1, 1, 1, 4, 4, 6, 6, 6, 12, 12, 12],
  [1, 1, 1, 1, 4, 4, 12, 12, 18, 18, 18, 36],
  [1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 6, 6],
  [1, 1, 1, 2, 2, 2, 3, 4, 4, 4, 6, 6],
  [1, 1, 1, 3, 4, 4, 4, 4, 4, 4, 6, 12],
  [1, 1, 1, 3, 6, 8, 8, 8, 8, 8, 8, 12],
  [1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3],
  [1, 1, 2, 2, 2, 2, 3, 3, 6, 6, 6, 6],
  [1, 1, 2, 2, 2, 2, 3, 3, 6, 6, 6, 12],
  [1, 1, 2, 2, 2, 2, 6, 6, 6, 6, 9, 9],
  [1, 1, 2, 3, 3, 4, 4, 4, 6, 6, 12, 12],
  [1, 1, 2, 3, 3, 6, 6, 8, 8, 8, 12, 12],
  [1, 1, 2, 6, 6, 6, 6, 10, 10, 10, 15, 15]]]

