sage: L=[]; c=0
....: with open('UpToRank21par.txt') as f:
....:     for line in f:
....:         t = eval(line); c+=1
....:         l=[int(t[-1]/i) for i in t]
....:         l.sort()
....:         if not l in L:
....:             L.append(l)
....: 
sage: L.sort()
sage: c; len(L)
189
187
sage: C=[0 for i in range(21)]
sage: for l in L:
....:     C[len(l)-1]+=1
....: 
sage: C
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 22, 2, 28, 0, 8, 122]

sage: %attach /home/sebastien/Nutstore Files/SAGE/TypeCriteria.sage
....: %attach /home/sebastien/Nutstore Files/SAGE/TypeToNormaliz.sage

sage: %time L2=TypesCriteria(L)
CPU times: user 137 ms, sys: 214 ms, total: 350 ms
Wall time: 1.66 s
sage: len(L); len(L2)
187
40
sage: %time L3=GradingCriteria(L2)
CPU times: user 42.6 ms, sys: 137 ms, total: 180 ms
Wall time: 417 ms
sage: len(L3)
28
sage: TypesToPreNormalizAlone(L3)
for i in *; do timeout 0.1s normaliz -x=4 -c "$i"; done
# There remain 2 uncompleted types + 0 with solution
for i in *; do timeout 1s normaliz -x=4 -c "$i"; done
# There remain 0 uncompleted types + 0 with solution

# End of the proof.

## Double-Checked
