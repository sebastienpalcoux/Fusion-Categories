Below are the computational details for the ranks 16 and 17:

## Rank 16 ##

sage: L=[]; c=0
....: with open('Rank16pahr.txt') as f:
....:     for line in f:
....:         t = eval(line); c+=1
....:         l=[int(t[-1]/i) for i in t]
....:         l.sort()
....:         if not l in L:
....:             L.append(l)
....: 
sage: L.sort()
sage: c; len(L)
7587
7586
sage: %attach /home/sebastien/Nutstore Files/SAGE/TypeCriteria.sage
....: %attach /home/sebastien/Nutstore Files/SAGE/TypeToNormaliz.sage
sage: %time L2=TypesCriteria(L,0.1)
CPU times: user 6.56 s, sys: 3.39 s, total: 9.96 s
Wall time: 1min 12s
sage: len(L2)
3298
sage: %time L3=GradingCriteria(L2)
CPU times: user 3.31 s, sys: 5.23 s, total: 8.54 s
Wall time: 19.9 s
sage: len(L3)
2741
# Only two non-perfect:
[1, 1, 1, 21, 66, 96, 96, 1056, 1848, 2464, 2464, 2464, 2464, 2464, 2464, 3696]
[1, 1, 6, 6, 18, 18, 18, 18, 18, 22, 99, 99, 132, 198, 198, 198]
sage: TypesToPreNormalizAlone(L3)
for i in *; do timeout 1s normaliz -x=4 -c "$i"; done
# There remain 175 uncompleted types + 1 with solution	## All perfect!!
for i in *; do timeout 10s normaliz -x=4 -c "$i"; done
# There remain 152 uncompleted types + 1 with solution
for i in *; do timeout 100s normaliz -x=4 -c "$i"; done
# There remain 131 uncompleted types + 1 with solution

The one with a solution: [1,4,4,4,4,4,4,6,6,13,39,39,52,78,78,78]
The 131 remaining ones:
[[1,10,10,10,10,10,15,33,44,110,132,165,220,330,330,330],
[1,11,11,11,12,24,24,24,24,24,44,66,88,132,132,132],
[1,13,13,20,30,60,65,130,156,260,260,260,260,260,260,390],
[1,13,18,24,26,36,39,117,234,312,312,312,312,312,312,468],
[1,13,20,26,30,52,60,65,195,260,260,260,260,260,260,390],
[1,26,30,36,39,130,195,234,585,780,780,780,780,780,780,1170],
[1,26,42,52,56,91,91,273,546,728,728,728,728,728,728,1092],
[1,28,28,65,91,180,260,2340,4095,5460,5460,5460,5460,5460,5460,8190],
[1,30,30,30,30,30,110,132,165,300,825,825,1100,1650,1650,1650],
[1,30,55,55,60,132,300,330,825,1100,1100,1100,1100,1100,1100,1650],
[1,30,65,105,180,180,182,2340,4095,5460,5460,5460,5460,5460,5460,8190],
[1,30,90,91,117,140,252,2340,4095,5460,5460,5460,5460,5460,5460,8190],
[1,33,55,72,99,220,360,360,990,1320,1320,1320,1320,1320,1320,1980],
[1,35,35,35,35,35,105,168,385,660,1320,3080,3080,4620,4620,4620],
[1,39,39,42,56,78,104,273,546,728,728,728,728,728,728,1092],
[1,39,49,98,108,126,1404,9828,17199,22932,22932,22932,22932,22932,22932,34398],
[1,39,60,65,90,182,252,2340,4095,5460,5460,5460,5460,5460,5460,8190],
[1,45,45,60,110,110,132,180,495,660,660,660,660,660,660,990],
[1,45,45,60,132,180,220,220,220,220,220,495,660,990,990,990],
[1,45,45,182,210,780,1260,1820,4095,5460,5460,5460,5460,5460,5460,8190],
[1,45,55,60,60,60,132,220,495,660,660,660,660,660,660,990],
[1,45,60,70,180,182,195,2340,4095,5460,5460,5460,5460,5460,5460,8190],
[1,45,63,91,130,168,630,4680,8190,10920,10920,10920,10920,10920,10920,16380],
[1,50,52,75,78,156,525,3900,6825,9100,9100,9100,9100,9100,9100,13650],
[1,50,90,132,225,550,990,2475,2475,2475,2475,2475,2475,3300,4950,4950],
[1,54,54,63,91,117,364,2808,4914,6552,6552,6552,6552,6552,6552,9828],
[1,54,140,195,252,273,910,7020,12285,16380,16380,16380,16380,16380,16380,24570],
[1,55,55,60,60,75,132,660,660,1100,1100,1100,1100,1100,1100,1650],
[1,55,55,70,70,77,220,220,308,308,308,308,308,770,770,770],
[1,55,60,60,75,132,440,825,1650,2200,2200,2200,2200,2200,2200,3300],
[1,55,63,63,63,63,63,140,198,1155,1980,4620,4620,6930,6930,6930],
[1,55,75,132,150,275,450,1980,1980,3300,3300,3300,3300,3300,3300,4950],
[1,60,60,75,110,132,275,330,825,1100,1100,1100,1100,1100,1100,1650],
[1,60,60,75,110,132,330,825,825,825,825,825,825,1100,1650,1650],
[1,60,63,91,120,455,468,4680,8190,10920,10920,10920,10920,10920,10920,16380],
[1,60,75,75,75,75,75,110,132,300,825,825,1100,1650,1650,1650],
[1,60,75,110,132,150,150,150,150,150,825,825,1100,1650,1650,1650],
[1,60,75,110,132,150,300,825,825,825,825,825,825,1100,1650,1650],
[1,60,90,91,117,130,252,2340,4095,5460,5460,5460,5460,5460,5460,8190],
[1,60,100,100,110,132,150,825,825,825,1100,1100,1100,1100,1100,1650],
[1,60,300,325,343,3900,27300,191100,334425,445900,445900,445900,445900,445900,445900,668850],
[1,63,65,84,105,182,630,4680,8190,10920,10920,10920,10920,10920,10920,16380],
[1,63,91,168,180,420,455,4680,8190,10920,10920,10920,10920,10920,10920,16380],
[1,65,65,120,195,420,468,4680,8190,10920,10920,10920,10920,10920,10920,16380],
[1,65,65,126,504,819,936,9360,16380,21840,21840,21840,21840,21840,21840,32760],
[1,65,70,78,105,156,252,2340,4095,5460,5460,5460,5460,5460,5460,8190],
[1,65,70,105,252,273,546,4680,8190,10920,10920,10920,10920,10920,10920,16380],
[1,65,70,175,182,260,420,3900,6825,9100,9100,9100,9100,9100,9100,13650],
[1,65,182,195,315,360,390,4680,8190,10920,10920,10920,10920,10920,10920,16380],
[1,72,78,91,105,455,1260,9360,16380,21840,21840,21840,21840,21840,21840,32760],
[1,75,100,132,165,165,1800,2200,4950,6600,6600,6600,6600,6600,6600,9900],
[1,75,140,182,195,210,420,3900,6825,9100,9100,9100,9100,9100,9100,13650],
[1,77,77,77,77,77,135,198,945,1485,2970,6930,6930,10395,10395,10395],
[1,77,77,77,77,77,252,495,630,3465,5940,13860,13860,20790,20790,20790],
[1,78,108,140,195,351,910,7020,12285,16380,16380,16380,16380,16380,16380,24570],
[1,81,91,126,252,364,378,4212,7371,9828,9828,9828,9828,9828,9828,14742],
[1,84,105,168,312,455,520,1365,2730,3640,3640,3640,3640,3640,3640,5460],
[1,84,108,135,140,2548,6615,49140,85995,114660,114660,114660,114660,114660,114660,171990],
[1,91,91,120,195,390,420,2184,2184,3640,3640,3640,3640,3640,3640,5460],
[1,91,108,140,390,585,702,7020,12285,16380,16380,16380,16380,16380,16380,24570],
[1,91,126,162,252,351,364,4212,7371,9828,9828,9828,9828,9828,9828,14742],
[1,91,126,189,364,585,1890,14040,24570,32760,32760,32760,32760,32760,32760,49140],
[1,91,126,351,351,364,504,5616,9828,13104,13104,13104,13104,13104,13104,19656],
[1,91,224,273,273,390,672,6240,10920,14560,14560,14560,14560,14560,14560,21840],
[1,91,315,360,390,819,3640,13104,13104,21840,21840,21840,21840,21840,21840,32760],
[1,96,147,182,455,735,6240,43680,76440,101920,101920,101920,101920,101920,101920,152880],
[1,104,120,273,273,420,520,1365,2730,3640,3640,3640,3640,3640,3640,5460],
[1,104,260,273,273,315,360,4680,8190,10920,10920,10920,10920,10920,10920,16380],
[1,105,105,140,182,300,390,3900,6825,9100,9100,9100,9100,9100,9100,13650],
[1,105,117,175,300,728,3276,23400,40950,54600,54600,54600,54600,54600,54600,81900],
[1,105,168,180,280,315,455,4680,8190,10920,10920,10920,10920,10920,10920,16380],
[1,105,168,200,455,525,840,7800,13650,18200,18200,18200,18200,18200,18200,27300],
[1,105,175,182,300,390,975,7800,13650,18200,18200,18200,18200,18200,18200,27300],
[1,105,175,182,300,390,3900,6825,9100,9100,9100,9100,9100,9100,13650,27300],
[1,105,175,182,300,390,3900,6825,13650,18200,18200,18200,18200,18200,18200,27300],
[1,105,175,182,300,390,3900,27300,47775,63700,63700,63700,63700,63700,63700,95550],
[1,108,117,140,325,1170,4914,35100,61425,81900,81900,81900,81900,81900,81900,122850],
[1,108,140,195,234,273,910,7020,12285,16380,16380,16380,16380,16380,16380,24570],
[1,108,140,195,260,468,819,7020,12285,16380,16380,16380,16380,16380,16380,24570],
[1,108,140,351,585,728,1755,14040,24570,32760,32760,32760,32760,32760,32760,49140],
[1,108,140,351,585,728,7020,12285,24570,32760,32760,32760,32760,32760,32760,49140],
[1,117,117,260,315,360,364,4680,8190,10920,10920,10920,10920,10920,10920,16380],
[1,117,147,260,315,1274,9360,65520,114660,152880,152880,152880,152880,152880,152880,229320],
[1,120,182,195,390,420,455,1365,2730,3640,3640,3640,3640,3640,3640,5460],
[1,125,140,168,225,4095,16380,117000,204750,273000,273000,273000,273000,273000,273000,409500],
[1,126,130,294,390,735,3185,11466,11466,19110,19110,19110,19110,19110,19110,28665],
[1,135,140,168,260,945,1755,14040,24570,32760,32760,32760,32760,32760,32760,49140],
[1,135,140,168,260,945,7020,12285,24570,32760,32760,32760,32760,32760,32760,49140],
[1,135,168,260,455,840,1755,14040,24570,32760,32760,32760,32760,32760,32760,49140],
[1,135,468,700,2275,2340,3780,35100,61425,81900,81900,81900,81900,81900,81900,122850],
[1,140,182,375,525,2730,4875,39000,68250,91000,91000,91000,91000,91000,91000,136500],
[1,140,189,585,728,945,1512,14040,24570,32760,32760,32760,32760,32760,32760,49140],
[1,147,195,208,315,1274,9360,65520,114660,152880,152880,152880,152880,152880,152880,229320],
[1,150,168,195,325,350,975,7800,13650,18200,18200,18200,18200,18200,18200,27300],
[1,150,168,195,325,350,3900,6825,13650,18200,18200,18200,18200,18200,18200,27300],
[1,156,200,245,315,5733,22932,163800,286650,382200,382200,382200,382200,382200,382200,573300],
[1,175,182,210,525,525,780,7800,13650,18200,18200,18200,18200,18200,18200,27300],
[1,175,270,910,2100,2457,3780,35100,61425,81900,81900,81900,81900,81900,81900,122850],
[1,180,182,245,351,882,7020,49140,85995,114660,114660,114660,114660,114660,114660,171990],
[1,180,195,245,882,1170,1820,16380,28665,38220,38220,38220,38220,38220,38220,57330],
[1,180,315,343,455,4680,32760,229320,401310,535080,535080,535080,535080,535080,535080,802620],
[1,180,315,468,840,2275,2275,23400,40950,54600,54600,54600,54600,54600,54600,81900],
[1,182,546,1053,1365,1620,1820,21060,36855,49140,49140,49140,49140,49140,49140,73710],
[1,189,455,585,728,840,1512,14040,24570,32760,32760,32760,32760,32760,32760,49140],
[1,260,420,468,975,12740,33075,245700,429975,573300,573300,573300,573300,573300,573300,859950],
[1,270,910,1400,2457,4095,8775,70200,122850,163800,163800,163800,163800,163800,163800,245700],
[1,270,910,1400,2457,4095,35100,61425,122850,163800,163800,163800,163800,163800,163800,245700],
[1,300,325,450,450,468,585,1300,2925,3900,3900,3900,3900,3900,3900,5850],
[1,315,360,390,455,4095,4368,7280,16380,21840,21840,21840,21840,21840,21840,32760],
[1,315,360,455,468,585,910,9360,16380,21840,21840,21840,21840,21840,21840,32760],
[1,315,360,468,780,2275,2275,23400,40950,54600,54600,54600,54600,54600,54600,81900],
[1,315,585,882,1300,7350,9100,81900,143325,191100,191100,191100,191100,191100,191100,286650],
[1,325,468,585,900,1300,2700,3900,8775,11700,11700,11700,11700,11700,11700,17550],
[1,325,1300,1620,2457,5850,13650,105300,184275,245700,245700,245700,245700,245700,245700,368550],
[1,325,1620,2457,3900,4550,13650,105300,184275,245700,245700,245700,245700,245700,245700,368550],
[1,350,450,468,525,585,1300,11700,20475,27300,27300,27300,27300,27300,27300,40950],
[1,364,910,1053,1365,1620,1638,21060,36855,49140,49140,49140,49140,49140,49140,73710],
[1,416,567,637,2646,3969,33696,235872,412776,550368,550368,550368,550368,550368,550368,825552],
[1,416,637,1134,2457,3969,33696,235872,412776,550368,550368,550368,550368,550368,550368,825552],
[1,455,728,1053,1620,2184,5265,42120,73710,98280,98280,98280,98280,98280,98280,147420],
[1,455,728,1053,1620,2184,21060,36855,73710,98280,98280,98280,98280,98280,98280,147420],
[1,468,525,585,650,700,1050,11700,20475,27300,27300,27300,27300,27300,27300,40950],
[1,630,1500,2275,2457,10500,22750,175500,307125,409500,409500,409500,409500,409500,409500,614250],
[1,637,637,1170,1620,2106,21060,147420,257985,343980,343980,343980,343980,343980,343980,515970],
[1,675,1000,1625,2268,36855,147420,1053000,1842750,2457000,2457000,2457000,2457000,2457000,2457000,3685500],
[1,975,1300,1620,2457,9100,11700,105300,184275,245700,245700,245700,245700,245700,245700,368550],
[1,1300,1620,1911,3185,51597,206388,1474200,2579850,3439800,3439800,3439800,3439800,3439800,3439800,5159700],
[1,1300,1620,2457,9100,27300,61425,81900,184275,245700,245700,245700,245700,245700,245700,368550],
[1,1300,1620,2457,9100,27300,81900,184275,184275,184275,184275,184275,184275,245700,368550,368550],
[1,1300,2457,16380,24375,47250,113750,877500,1535625,2047500,2047500,2047500,2047500,2047500,2047500,3071250],
[1,1625,2457,3250,6825,16380,47250,351000,614250,819000,819000,819000,819000,819000,819000,1228500]]

########################### double-checked

## Rank 17 ##

sage: %attach /home/sebastien/Nutstore Files/SAGE/TypeCriteria.sage
....: %attach /home/sebastien/Nutstore Files/SAGE/TypeToNormaliz.sage
with open('Rank17pahr.txt') as f:
    for line in f:
        t = eval(line);
        l=[int(t[-1]/i) for i in t]
        l.sort()
        PreNormalizAlone(l)		# that automatically the identify the t with same l, so we end with 152392 files

* * * * * cd /home/sebastien/Rank17 && /bin/bash FullMove.sh

ls -1 | wc -l
        
for i in *; do timeout 1s normaliz -x=4 -c "$i"; done
# There remain 10965 uncompleted types + 23 with solution
# We made a list L with these 10965 + 23 types

sage: %attach /home/sebastien/Nutstore Files/SAGE/TypeCriteria.sage
....: %attach /home/sebastien/Nutstore Files/SAGE/TypeToNormaliz.sage

sage: len(L)
10988
sage: %time L2=TypesCriteria(L)
CPU times: user 7.54 s, sys: 36.1 s, total: 43.7 s
Wall time: 1min 46s
sage: len(L2)
9500
sage: %time LL2=TypesCriteria(L2,0.1)
CPU times: user 23 s, sys: 31.1 s, total: 54.1 s
Wall time: 9min 47s
sage: len(LL2)
9411
sage: %time L3=GradingCriteria(LL2)
CPU times: user 15.4 s, sys: 46.7 s, total: 1min 2s
Wall time: 2min 20s
sage: len(L3)
7746
sage: L3.sort()
sage: print(L3[27])
[1, 1, 180, 220, 396, 396, 396, 900, 2475, 2475, 2475, 2475, 2475, 2475, 3300, 4950, 4950]
sage: print(L3[28])
[1, 2, 2, 2, 2, 2, 3, 3, 6, 11, 12, 12, 44, 44, 66, 66, 66]

7718 + 28 (perfect + non-perfect)

## Non-perfect case ##
sage: TypesToPreNormalizAlone(L3[:28])		# let us try to exclude all the non-perfect first
for i in *; do timeout 10s normaliz -x=4 -c "$i"; done
# There remain 20 uncompleted types + 1 with solution
for i in *; do timeout 100s normaliz -x=4 -c "$i"; done
# There remain 18 uncompleted types + 1 with solution							# TOTAL: 7718+18+1=7737

[1,1,2,2,4,6,6,6,6,6,6,33,33,44,66,66,66]

[[1,1,1,15,30,30,39,39,39,78,130,130,130,130,130,130,195],
[1,1,1,132,165,168,168,210,2640,4620,6160,6160,6160,6160,6160,6160,9240],
[1,1,1,147,462,528,528,588,7392,12936,17248,17248,17248,17248,17248,17248,25872],
[1,1,2,3,3,24,24,24,24,24,66,66,88,88,88,132,132],
[1,1,6,6,18,22,36,99,99,132,198,198,198,198,198,198,198],
[1,1,8,8,8,8,8,9,9,22,88,198,198,264,396,396,396],
[1,1,11,11,24,40,66,132,330,330,330,330,330,330,440,660,660],
[1,1,11,11,40,60,60,60,60,60,66,330,330,440,660,660,660],
[1,1,11,11,40,60,66,120,330,330,330,330,330,330,440,660,660],
[1,1,12,12,12,12,12,18,18,18,22,99,99,132,198,198,198],
[1,1,24,33,33,40,88,110,330,330,330,330,330,330,440,660,660],
[1,1,27,27,104,270,468,1560,3510,3510,3510,3510,3510,3510,4680,7020,7020],
[1,1,33,33,132,132,132,132,132,140,220,660,1540,1540,2310,2310,2310],
[1,1,132,132,132,132,132,140,308,308,385,385,1540,1540,2310,2310,2310],
[1,1,132,132,132,132,132,140,385,385,924,924,924,1540,2310,2310,2310],
[1,1,132,132,140,220,220,220,220,220,385,385,1540,1540,2310,2310,2310],
[1,1,132,132,140,385,385,660,660,660,660,660,660,1540,2310,2310,2310],
[1,1,180,220,396,396,396,900,2475,2475,2475,2475,2475,2475,3300,4950,4950]]

################# double-checked
