The following command scans each line of `EgyFracL5Div.txt` and selects those that match the pattern `a a b b c`. It then writes the matching lines to a new file named `EgyFracL5DivNC9.txt`.
awk '$1 == $2 && $3 == $4' EgyFracL5Div.txt > EgyFracL5DivNC9.txt

Idem for the pattern `a a b c d e f` or `a b b c d e f` or `a b c c d e f` or `a b c d d e f` or `a b c d e e f`: 
awk '($1 == $2 || $2 == $3 || $3 == $4 || $4 == $5 || $5 == $6)' EgyFracL7Div.txt > EgyFracL7DivNC9.txt

This command processes `EgyFracL7Div.txt`, extracting all lines that contain at least one pair of consecutive equal numbersâ€”such as `a a b c d e f`, `a b b c d e f`, ..., up to `a b c d e e f`.
From each matching line, it outputs only the last number, collects all such values, removes duplicates, and writes the result to `EgyFracL7Lasts.txt`, sorted in increasing order.

awk '($1 == $2 || $2 == $3 || $3 == $4 || $4 == $5 || $5 == $6) {print $7}' EgyFracL7Div.txt | sort -n | uniq > EgyFracL7DivNC9Dim.txt


The following command processes each line of `EgyFracL7Div.txt` and selects those that satisfy the following conditions simultaneously:
1. The line contains **at least one pair of consecutive equal numbers** among the first six fields (for example, patterns like `a a b c d e f`, `a b b c d e f`, etc.).
2. For **every** such repeated pair `x x`, the last number in the line is **not divisible by `2x`**.
Only lines meeting both criteria are written to the output file `EgyFracL7DivNC9Except.txt`.

awk '{pairs=0; bad=0; for(i=1;i<=5;i++) if($i==$(i+1)){pairs++; if($7%(2*$i)==0) bad=1} if(pairs>0 && bad==0) print}' EgyFracL7Div.txt > EgyFracL7DivNC9Except.txt

Only keep global FPdim:
awk '{pairs=0; bad=0; for(i=1;i<=5;i++) if($i==$(i+1)){pairs++; if($7%(2*$i)==0) bad=1} if(pairs>0 && bad==0) print $7}' EgyFracL7Div.txt | sort -n | uniq > EgyFracL7DivNC9ExceptDim.txt


## Regarding the length-5 case, only need to consider 9, 21, but already in DimRank9UpTo32000.txt
## So only need to consider the length-7 case

The following command compares two files, each containing one number per line:

* `EgyFracL7DivNC9ExceptDim.txt`
* `DimRank9UpTo32000.txt`

It writes to `MissingFromDimRank9.txt` all numbers that appear in the first file but **not** in the second.

comm -23 <(sort EgyFracL7DivNC9ExceptDim.txt) <(sort DimRank9UpTo32000.txt) > missing_numbers.txt
sort -n missing_numbers.txt > MissingFromDimRank9.txt
rm missing_numbers.txt

Final list:
7		# no need to consider since rank = 9
8		# 
32580	# we only need to consider up to 32000
32895
33810
...

Conclusion: every FPdim, between 9 and 32000, corresponding to exceptional Egyptian fractions (i.e. where there is n_V f_v which does not divide f_1) with divisibilty constraint of length 5 or 7, is the FPdim of a usual Egyptian fraction with divisibilty constraint of length 9
